
                                                                       SPRING MVC QUESTIONS : 




what is spring mvc ?

➳ A Spring MVC is a Java framework which is used to build web applications. 

➳ It follows the Model-View-Controller design pattern. It implements all the basic features of a core spring framework like Inversion of Control, Dependency Injection.
__________________________________________________________________________________________________________________________________________________________________________

What is Spring Initializer ?

➳ Spring Initializer is a web application that helps you to create an initial spring boot project structure and provides a maven or gradle file to build your code. 

➳ It solves the problem of setting up a framework when you are starting a project from scratch.
_________________________________________________________________________________________________________________________________________________________________________

Explain Flow of Spring MVC ?

Ans.

➳ The DispatcherServlet configured in web.xml file receives the request.

➳ The DispatcherServlet finds the appropriate Controller with the help of HandlerMapping and then invokes associated Controller.

➳ Then the Controller executes the logic business logic and then returns ModelAndView object to the DispatcherServlet.

➳ The DispatcherServlet determines the view from the ModelAndView object.

➳ Then the DispatcherServlet passes the model object to the View.

➳ The View is rendered and the Dispatcher Servlet sends the output to the Servlet container. Finally Servlet Container sends the result back to the user.
__________________________________________________________________________________________________________________________________________________________________________

What is Model and View Object ? 

➳ The model job is to manage the data of the application. It recieves user input from the controller.

➳ The view renders the presentation of the model in the particular format.
_________________________________________________________________________________________________________________________________________________________________________

what is maven ?

-> Maven is a build automation tool used primarily for Java projects. Maven can also be used to build and manage projects written in C#, Ruby, Scala, and other languages.

-> Maven is chiefly used for Java-based projects, helping to download dependencies, which refers to the libraries or JAR files. 
__________________________________________________________________________________________________________________________________________________________________________

what does @ModelAttribute annotation do ?

In Spring MVC, the @ModelAttribute annotation is used to bind a method parameter or method-level attribute to a model attribute.
It's commonly used to prepare data that should be added to the model before rendering a view.

1. Method-Level @ModelAttribute:


@Controller
public class MyController {

    @ModelAttribute("countries")
    public List<String> getCountries() {
        // Retrieve a list of countries from a database or other source
        List<String> countries = someService.retrieveCountries();
        return countries;
    }

    @GetMapping("/myPage")
    public String myPage() {
        // The "countries" model attribute is automatically added to the model
        return "myPage";
    }
}

In this example, the getCountries method annotated with @ModelAttribute retrieves a list of countries and adds it to the model with the name "countries." The data is then accessible in the "myPage" view.

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

2. Method Parameter @ModelAttribute:


@Controller
public class MyController {

    @GetMapping("/editUser")
    public String editUser(@ModelAttribute("user") User user) {
        // This method receives a "user" parameter from the model
        // The "user" object is automatically populated with data from the model
        return "editUser";
    }
}

In this example, the editUser method has a @ModelAttribute("user") parameter. Spring MVC populates the "user" object with data from the model, making it available for use in the "editUser" view.
__________________________________________________________________________________________________________________________________________________________________________




